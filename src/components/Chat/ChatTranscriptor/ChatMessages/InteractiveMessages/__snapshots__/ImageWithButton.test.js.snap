// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Style should match the snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c1 {
  font-size: 1em;
  line-height: 1.465;
  font-weight: normal;
  font-family: Arial,Helvetica,"sans-serif",Helvetica,sans-serif;
  padding: 0;
  color: inherit;
  margin: 0;
}

.c1:last-child {
  margin: 0;
}

.c7 {
  font-size: 1em;
  line-height: 1.465;
  font-weight: normal;
  font-family: Arial,Helvetica,"sans-serif",Helvetica,sans-serif;
  padding: 0;
  white-space: nowrap;
  color: #111111;
  cursor: pointer;
  text-align: center;
  vertical-align: middle;
  border-width: 0px;
  border-style: solid;
  padding-right: 10px;
  padding-left: 10px;
  font-family: Arial,Helvetica,"sans-serif";
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-width: 260px;
  background: linear-gradient(#FFFFFF,#FFFFFF 80%,#FFFFFF);
  border-color: #fff #fff #fff;
  background: linear-gradient(#FFFFFF,#FFFFFF 80%,#FFFFFF);
  border-color: #fff #fff #fff;
  color: undefined;
  padding-top: 0.45rem;
  padding-bottom: 0.45rem;
  font-size: 0.875rem;
  box-shadow: 1px 2px 3px 0px rgba(0,0,0,0.1);
}

.c7:hover {
  background: linear-gradient(#fff,#f9f9f9);
}

.c7:focus {
  box-shadow: 0 0 2px 0 #E77600;
  outline: none;
}

.c7:active {
  border-color: #fff #fff #fff;
}

.c7:disabled {
  cursor: not-allowed;
  opacity: 0.7;
  outline: none;
  pointer-events: none;
}

.c7:disabled:hover {
  background: linear-gradient(#FFFFFF,#FFFFFF 80%,#FFFFFF);
}

.c7 > img,
.c7 .loader {
  margin-right: undefined;
  position: relative;
  top: 1px;
}

.c7:hover {
  background: linear-gradient(#fff,#f9f9f9);
}

.c7:focus {
  box-shadow: 0 0 2px 0 #E77600;
  outline: none;
}

.c7:active {
  border-color: #fff #fff #fff;
}

.c7:disabled {
  cursor: not-allowed;
  opacity: 0.7;
  outline: none;
  pointer-events: none;
}

.c7:disabled:hover {
  background: linear-gradient(#FFFFFF,#FFFFFF 80%,#FFFFFF);
}

.c2 {
  font-weight: bold !important;
}

.c5 {
  color: #555555;
}

.c4 {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.c0 {
  padding: 14px;
  text-align: left;
}

.c6 {
  position: relative;
  white-space: pre-line;
  border-radius: 6px;
}

.c3 {
  max-height: calc(95vw * (9/16));
  overflow: hidden;
  display: none;
}

.c8 {
  display: inline;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0 10px 10px 0;
  max-width: none;
  border: 1px solid #DDDDDD;
  white-space: pre-line;
  border-radius: 6px;
}

.c8:hover {
  background: #06adcb;
}

<body>
    <div>
      <div
        class="c0"
      >
        <p
          class="c1 c2"
        >
          MessageTitle
        </p>
      </div>
      <div
        class="c3"
      >
        <img
          alt="ImageDescription"
          class="c4"
          src="ImageData"
        />
      </div>
      <div
        class="c0"
      >
        <p
          class="c1 c5"
        >
          MessageSubTitle
        </p>
      </div>
      <div
        class="c6"
      >
        <div>
          <button
            class="c7 c8"
            data-selected="false"
            type="default"
            value="Button1Title"
          >
            <div>
              <p
                class="c1 c2"
              >
                Button1Title
              </p>
            </div>
          </button>
          <button
            class="c7 c8"
            data-selected="false"
            type="default"
            value="Button2Title"
          >
            <div>
              <p
                class="c1 c2"
              >
                Button2Title
              </p>
            </div>
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-iRbamj hpGXcd"
    >
      <p
        class="sc-bZQynM fraGhu sc-jAaTju hYWMdF"
      >
        MessageTitle
      </p>
    </div>
    <div
      class="sc-gipzik inmHgs"
    >
      <img
        alt="ImageDescription"
        class="sc-gPEVay cbWEyG"
        src="ImageData"
      />
    </div>
    <div
      class="sc-iRbamj hpGXcd"
    >
      <p
        class="sc-bZQynM fraGhu sc-jDwBTQ jVYcAQ"
      >
        MessageSubTitle
      </p>
    </div>
    <div
      class="sc-jlyJG fUHAZN"
    >
      <div>
        <button
          class="sc-gzVnrw fgSGc sc-csuQGl gdWUTH"
          data-selected="false"
          type="default"
          value="Button1Title"
        >
          <div>
            <p
              class="sc-bZQynM fraGhu sc-jAaTju hYWMdF"
            >
              Button1Title
            </p>
          </div>
        </button>
        <button
          class="sc-gzVnrw fgSGc sc-csuQGl gdWUTH"
          data-selected="false"
          type="default"
          value="Button2Title"
        >
          <div>
            <p
              class="sc-bZQynM fraGhu sc-jAaTju hYWMdF"
            >
              Button2Title
            </p>
          </div>
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
